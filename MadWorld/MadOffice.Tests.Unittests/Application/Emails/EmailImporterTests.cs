using AutoFixture.Xunit2;
using FluentAssertions;
using MadOffice.Application.Emails;
using MadOffice.Domain.Emails.Interfaces;
using MadOffice.Domain.Emails.Models;
using Moq;

namespace MadOffice.Tests.Unittests.Application.Emails;

public class EmailImporterTests
{
        [Theory]
    [AutoDomainData]
    public void Import_GivenValidEmailExcelFile_ThreePersons(
        [Frozen] Mock<IEmailReader> emailReader,
        EmailImporter emailImporter
        )
    {
        // Arrange
        // There are two persons in the base64 Excel. 
        const string excelBase64 = "";
        var excelStream = new MemoryStream(Convert.FromBase64String(excelBase64));

        emailReader.Setup(er => er.Save(It.IsAny<List<Person>>()))
            .Returns(true);

        var emailType = EmailType.GeneralInfo;
        
        // Act
        var succeed = emailImporter.Import(excelStream, emailType);

        // Assert
        succeed.Should().BeTrue();
        emailReader.Verify(
            er => er.Save(
                It.Is<List<Person>>(
                    p => p.Count == 2 &&
                         p[0].Id == 1 &&
                         p[0].FirstName == "John" &&
                         p[0].LastName == "Doe" &&
                         p[0].Email == "test@test.nl" &&
                         p[0].EmailType == EmailType.GeneralInfo
                )),
            Times.Once);
    }
}